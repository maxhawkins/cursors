// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cursors.proto

package cursors

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RPCType int32

const (
	RPCType_UNKNOWN RPCType = 0
	RPCType_SPEAK   RPCType = 1
	RPCType_BYE     RPCType = 2
)

var RPCType_name = map[int32]string{
	0: "UNKNOWN",
	1: "SPEAK",
	2: "BYE",
}
var RPCType_value = map[string]int32{
	"UNKNOWN": 0,
	"SPEAK":   1,
	"BYE":     2,
}

func (x RPCType) String() string {
	return proto.EnumName(RPCType_name, int32(x))
}
func (RPCType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cursors_f092d33e1246211f, []int{0}
}

type RPC struct {
	Type                 RPCType  `protobuf:"varint,1,opt,name=type,proto3,enum=RPCType" json:"type,omitempty"`
	Payload              []byte   `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RPC) Reset()         { *m = RPC{} }
func (m *RPC) String() string { return proto.CompactTextString(m) }
func (*RPC) ProtoMessage()    {}
func (*RPC) Descriptor() ([]byte, []int) {
	return fileDescriptor_cursors_f092d33e1246211f, []int{0}
}
func (m *RPC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RPC.Unmarshal(m, b)
}
func (m *RPC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RPC.Marshal(b, m, deterministic)
}
func (dst *RPC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RPC.Merge(dst, src)
}
func (m *RPC) XXX_Size() int {
	return xxx_messageInfo_RPC.Size(m)
}
func (m *RPC) XXX_DiscardUnknown() {
	xxx_messageInfo_RPC.DiscardUnknown(m)
}

var xxx_messageInfo_RPC proto.InternalMessageInfo

func (m *RPC) GetType() RPCType {
	if m != nil {
		return m.Type
	}
	return RPCType_UNKNOWN
}

func (m *RPC) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type SpeakRequest struct {
	Speaking             bool     `protobuf:"varint,1,opt,name=speaking,proto3" json:"speaking,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpeakRequest) Reset()         { *m = SpeakRequest{} }
func (m *SpeakRequest) String() string { return proto.CompactTextString(m) }
func (*SpeakRequest) ProtoMessage()    {}
func (*SpeakRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cursors_f092d33e1246211f, []int{1}
}
func (m *SpeakRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpeakRequest.Unmarshal(m, b)
}
func (m *SpeakRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpeakRequest.Marshal(b, m, deterministic)
}
func (dst *SpeakRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpeakRequest.Merge(dst, src)
}
func (m *SpeakRequest) XXX_Size() int {
	return xxx_messageInfo_SpeakRequest.Size(m)
}
func (m *SpeakRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SpeakRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SpeakRequest proto.InternalMessageInfo

func (m *SpeakRequest) GetSpeaking() bool {
	if m != nil {
		return m.Speaking
	}
	return false
}

type CursorPosition struct {
	X                    uint32   `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y                    uint32   `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	UserId               uint32   `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TimestampMs          uint64   `protobuf:"varint,4,opt,name=timestamp_ms,json=timestampMs,proto3" json:"timestamp_ms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CursorPosition) Reset()         { *m = CursorPosition{} }
func (m *CursorPosition) String() string { return proto.CompactTextString(m) }
func (*CursorPosition) ProtoMessage()    {}
func (*CursorPosition) Descriptor() ([]byte, []int) {
	return fileDescriptor_cursors_f092d33e1246211f, []int{2}
}
func (m *CursorPosition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CursorPosition.Unmarshal(m, b)
}
func (m *CursorPosition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CursorPosition.Marshal(b, m, deterministic)
}
func (dst *CursorPosition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CursorPosition.Merge(dst, src)
}
func (m *CursorPosition) XXX_Size() int {
	return xxx_messageInfo_CursorPosition.Size(m)
}
func (m *CursorPosition) XXX_DiscardUnknown() {
	xxx_messageInfo_CursorPosition.DiscardUnknown(m)
}

var xxx_messageInfo_CursorPosition proto.InternalMessageInfo

func (m *CursorPosition) GetX() uint32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *CursorPosition) GetY() uint32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *CursorPosition) GetUserId() uint32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *CursorPosition) GetTimestampMs() uint64 {
	if m != nil {
		return m.TimestampMs
	}
	return 0
}

type ClientFrame struct {
	Sequence             uint32          `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Position             *CursorPosition `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ClientFrame) Reset()         { *m = ClientFrame{} }
func (m *ClientFrame) String() string { return proto.CompactTextString(m) }
func (*ClientFrame) ProtoMessage()    {}
func (*ClientFrame) Descriptor() ([]byte, []int) {
	return fileDescriptor_cursors_f092d33e1246211f, []int{3}
}
func (m *ClientFrame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientFrame.Unmarshal(m, b)
}
func (m *ClientFrame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientFrame.Marshal(b, m, deterministic)
}
func (dst *ClientFrame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientFrame.Merge(dst, src)
}
func (m *ClientFrame) XXX_Size() int {
	return xxx_messageInfo_ClientFrame.Size(m)
}
func (m *ClientFrame) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientFrame.DiscardUnknown(m)
}

var xxx_messageInfo_ClientFrame proto.InternalMessageInfo

func (m *ClientFrame) GetSequence() uint32 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *ClientFrame) GetPosition() *CursorPosition {
	if m != nil {
		return m.Position
	}
	return nil
}

type ServerFrame struct {
	Sequence             uint32            `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Positions            []*CursorPosition `protobuf:"bytes,2,rep,name=positions,proto3" json:"positions,omitempty"`
	SpeakerId            uint32            `protobuf:"varint,3,opt,name=speaker_id,json=speakerId,proto3" json:"speaker_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ServerFrame) Reset()         { *m = ServerFrame{} }
func (m *ServerFrame) String() string { return proto.CompactTextString(m) }
func (*ServerFrame) ProtoMessage()    {}
func (*ServerFrame) Descriptor() ([]byte, []int) {
	return fileDescriptor_cursors_f092d33e1246211f, []int{4}
}
func (m *ServerFrame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerFrame.Unmarshal(m, b)
}
func (m *ServerFrame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerFrame.Marshal(b, m, deterministic)
}
func (dst *ServerFrame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerFrame.Merge(dst, src)
}
func (m *ServerFrame) XXX_Size() int {
	return xxx_messageInfo_ServerFrame.Size(m)
}
func (m *ServerFrame) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerFrame.DiscardUnknown(m)
}

var xxx_messageInfo_ServerFrame proto.InternalMessageInfo

func (m *ServerFrame) GetSequence() uint32 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *ServerFrame) GetPositions() []*CursorPosition {
	if m != nil {
		return m.Positions
	}
	return nil
}

func (m *ServerFrame) GetSpeakerId() uint32 {
	if m != nil {
		return m.SpeakerId
	}
	return 0
}

func init() {
	proto.RegisterType((*RPC)(nil), "RPC")
	proto.RegisterType((*SpeakRequest)(nil), "SpeakRequest")
	proto.RegisterType((*CursorPosition)(nil), "CursorPosition")
	proto.RegisterType((*ClientFrame)(nil), "ClientFrame")
	proto.RegisterType((*ServerFrame)(nil), "ServerFrame")
	proto.RegisterEnum("RPCType", RPCType_name, RPCType_value)
}

func init() { proto.RegisterFile("cursors.proto", fileDescriptor_cursors_f092d33e1246211f) }

var fileDescriptor_cursors_f092d33e1246211f = []byte{
	// 320 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0xcf, 0x4b, 0xfb, 0x40,
	0x14, 0xc4, 0xbf, 0xdb, 0xf4, 0xdb, 0xa4, 0x2f, 0x69, 0x2d, 0x7b, 0x31, 0x88, 0x42, 0xcc, 0xa9,
	0x54, 0xec, 0xa1, 0x9e, 0x3d, 0x68, 0xa8, 0x50, 0x8a, 0x35, 0x6c, 0xfd, 0x81, 0xa7, 0x12, 0x9b,
	0x87, 0x06, 0x9b, 0x64, 0xdd, 0xdd, 0x68, 0xf3, 0xdf, 0x4b, 0x96, 0x34, 0x2a, 0x08, 0x1e, 0x3f,
	0xc3, 0x64, 0x66, 0xb2, 0x0f, 0x7a, 0xeb, 0x42, 0xc8, 0x5c, 0xc8, 0x31, 0x17, 0xb9, 0xca, 0xfd,
	0x73, 0x30, 0x58, 0x18, 0xd0, 0x43, 0x68, 0xab, 0x92, 0xa3, 0x4b, 0x3c, 0x32, 0xec, 0x4f, 0xac,
	0x31, 0x0b, 0x83, 0xdb, 0x92, 0x23, 0xd3, 0x2a, 0x75, 0xc1, 0xe4, 0x51, 0xb9, 0xc9, 0xa3, 0xd8,
	0x6d, 0x79, 0x64, 0xe8, 0xb0, 0x1d, 0xfa, 0x23, 0x70, 0x96, 0x1c, 0xa3, 0x57, 0x86, 0x6f, 0x05,
	0x4a, 0x45, 0x0f, 0xc0, 0x92, 0x15, 0x27, 0xd9, 0xb3, 0xce, 0xb2, 0x58, 0xc3, 0xfe, 0x0b, 0xf4,
	0x03, 0xdd, 0x1d, 0xe6, 0x32, 0x51, 0x49, 0x9e, 0x51, 0x07, 0xc8, 0x56, 0xdb, 0x7a, 0x8c, 0x6c,
	0x2b, 0x2a, 0x75, 0x7e, 0x8f, 0x91, 0x92, 0xee, 0x83, 0x59, 0x48, 0x14, 0xab, 0x24, 0x76, 0x0d,
	0xad, 0x75, 0x2a, 0x9c, 0xc5, 0xf4, 0x18, 0x1c, 0x95, 0xa4, 0x28, 0x55, 0x94, 0xf2, 0x55, 0x2a,
	0xdd, 0xb6, 0x47, 0x86, 0x6d, 0x66, 0x37, 0xda, 0xb5, 0xf4, 0xef, 0xc1, 0x0e, 0x36, 0x09, 0x66,
	0xea, 0x4a, 0x44, 0x29, 0xea, 0x51, 0xd5, 0xbe, 0x6c, 0x8d, 0x75, 0x5b, 0xc3, 0xf4, 0x04, 0x2c,
	0x5e, 0xcf, 0xd1, 0xdd, 0xf6, 0x64, 0x6f, 0xfc, 0x73, 0x25, 0x6b, 0x0c, 0xfe, 0x07, 0xd8, 0x4b,
	0x14, 0xef, 0x28, 0xfe, 0xce, 0x3d, 0x85, 0xee, 0xee, 0x33, 0xe9, 0xb6, 0x3c, 0xe3, 0xb7, 0xe0,
	0x2f, 0x07, 0x3d, 0x02, 0xd0, 0xef, 0xf4, 0xfd, 0x87, 0xbb, 0xb5, 0x32, 0x8b, 0x47, 0x23, 0x30,
	0xeb, 0x8b, 0x50, 0x1b, 0xcc, 0xbb, 0xc5, 0x7c, 0x71, 0xf3, 0xb0, 0x18, 0xfc, 0xa3, 0x5d, 0xf8,
	0xbf, 0x0c, 0xa7, 0x17, 0xf3, 0x01, 0xa1, 0x26, 0x18, 0x97, 0x8f, 0xd3, 0x41, 0xeb, 0xa9, 0xa3,
	0x0f, 0x7b, 0xf6, 0x19, 0x00, 0x00, 0xff, 0xff, 0x30, 0x46, 0x1b, 0x9f, 0xe9, 0x01, 0x00, 0x00,
}
